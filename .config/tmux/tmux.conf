# set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux/plugins/'
TMUX_PLUGIN_MANAGER_PATH="~/.local/share/tmux/plugins"

# git clone https://github.com/tmux-plugins/tpm ~/.local/share/tmux/plugins/tpm

# Install tpm
if "test ! -d $TMUX_PLUGIN_MANAGER_PATH/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm $TMUX_PLUGIN_MANAGER_PATH/tpm && $TMUX_PLUGIN_MANAGER_PATH/tpm/bin/install_plugins'"



# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'jimeh/tmux-themepack'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @plugin 'roosta/tmux-fuzzback'
set -g @fuzzback-popup 1
set -g @fuzzback-popup-size '70%'

set -g @plugin 'sainnhe/tmux-fzf'
TMUX_FZF_MENU=\
"switch window\n$TMUX_PLUGIN_MANAGER_PATH/tmux-fzf/scripts/window.sh switch\n"\
"switch pane\n$TMUX_PLUGIN_MANAGER_PATH/tmux-fzf/scripts/pane.sh switch\n"\
"attach session\n$TMUX_PLUGIN_MANAGER_PATH/tmux-fzf/scripts/session.sh attach\n"\
"rename window\n$TMUX_PLUGIN_MANAGER_PATH/tmux-fzf/scripts/window.sh rename\n"

set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'wfxr/tmux-fzf-url'
set -g @plugin 'tmux-plugins/tmux-copycat'

## Settings
set -g mouse on
set -g status off
set -g prefix `
bind ` send-prefix
set -g prefix2 C-b
set-window-option -g mode-keys vi
unbind r
bind -N "Source tmux.conf" r source-file ~/.config/tmux/tmux.conf \; display-message "source-file done"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

bind-key -T copy-mode-vi 'v' send -X begin-selection # start selecting text with "v"
bind-key -T copy-mode-vi 'y' send -X copy-selection # copy text with "y"
unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode after dragging with mouse
set -g @themepack 'powerline/default/cyan'
set -g @resurrect-capture-pane-contents 'off' # allow tmux-ressurect to capture pane contents
set -g @continuum-restore 'on' # enable tmux-continuum functionality
set -g @continuum-save-interval '2' # enable tmux-continuum functionality

# 1
# set -g default-terminal "screen-256color"
## set-default colorset-option -ga terminal-overrides ",xterm-256color:Tc"
# set-option -ga terminal-overrides ",*256col*:Tc"

#2
# set -g default-terminal "xterm-256color"
# set-option -ga terminal-overrides ",*256col*:Tc"

#3 Respects color and italics
# set -g default-terminal "tmux-256color"
# set-option -ga terminal-overrides ",*256col*:Tc"

#4
# set -g default-terminal 'xterm-256color'
# set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

#5 either this or tmux env
# set -g default-terminal 'alacritty-direct'
set -g default-terminal 'alacritty'
set-option -a terminal-overrides ",alacritty:RGB"

# undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm' # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' # underscore colours - needs tmux-3.0


## Key Bindings

# Splits
unbind %
unbind '"'
bind -N "Horizontal Split" | split-window -h -c "#{pane_current_path}" -l 30%
bind -N "Vertical Split" - split-window -v -c "#{pane_current_path}" -l 30%

# Split Navigations:
bind -N "Select the pane above the active pane" -r k select-pane -U
bind -N "Select the pane below the active pane" -r j select-pane -D
bind -N "Select the pane to the left of the active pane" -r h select-pane -L
bind -N "Select the pane to the right of the active pane" -r l select-pane -R

# Split Resize:
bind -N "Resize the pane up by 5" -r K resize-pane -U 5
bind -N "Resize the pane down by 5" -r J resize-pane -D 5
bind -N "Resize the pane left by 5" -r H resize-pane -L 5
bind -N "Resize the pane right by 5" -r L resize-pane -R 5

# Windows
bind -N "Create a new window" -r c new-window -c "#{pane_current_path}"
bind -N "Select the previously current window" -r b last-window
bind -N "Select the next pane" -r n next-window
bind -N "Select the previous window" -r p previous-window

# Panes
bind -N "Select the next pane" -r o select-pane -t :.+
bind -N "Move to last and maximize pane" -r m last-pane -Z 

# Sessions
bind -N "Kill session" C-k confirm-before kill-session

# Status
bind -N "Toggle status" -r '\' set -g status

#Theme2
set-option -g status off
set-option -g status-interval 1
set-option -g status-keys vi
set-option -g status-position top
set-option -g status-style default
set-option -g status-left-length 20
set-option -g status-left-style default
set-option -g status-left "#[default]"
set-option -g status-right-length 140
set-option -g status-right-style default
set-option -g status-right "#[default]"
set-window-option -g window-status-style fg=colour244
set-window-option -g window-status-style bg=default
set-window-option -g window-status-current-style fg=colour166
set-window-option -g window-status-current-style bg=default

set -g pane-border-indicators arrows
set -g pane-border-style fg=blue

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b "$TMUX_PLUGIN_MANAGER_PATH/tpm/tpm"
